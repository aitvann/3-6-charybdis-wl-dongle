#include <dt-bindings/zmk/mouse.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

/ {
    trackball_listener {
        compatible = "zmk,input-behavior-listener";
        device = <&vtrackball>;
        layers = <0 2 3 4>;
        evt-type = <INPUT_EV_REL>;
        x-input-code = <INPUT_REL_X>;
        y-input-code = <INPUT_REL_Y>;
        scale-multiplier = <1>;
        scale-divisor = <1>;
        bindings = <&ib_toggle_layer 4>;
    };

    trackball_snipe_listener {
        compatible = "zmk,input-behavior-listener";
        device = <&vtrackball>;
        layers = <>;
        evt-type = <INPUT_EV_REL>;
        x-input-code = <INPUT_REL_X>;
        y-input-code = <INPUT_REL_Y>;
        scale-multiplier = <1>;
        scale-divisor = <1>;
    };

    trackball_scroll_listener {
        compatible = "zmk,input-behavior-listener";
        device = <&vtrackball>;
        layers = <1>;
        evt-type = <INPUT_EV_REL>;
        x-input-code = <INPUT_REL_MISC>;
        y-input-code = <INPUT_REL_WHEEL>;
        y-invert;
        bindings = <&ib_wheel_scaler 1 16>;
    };

    ib_wheel_scaler: ib_wheel_scaler {
        compatible = "zmk,input-behavior-scaler";
        #binding-cells = <2>;
        evt-type = <INPUT_EV_REL>;
        input-code = <INPUT_REL_WHEEL>;
    };

    ib_toggle_layer: ib_toggle_layer {
        compatible = "zmk,input-behavior-tog-layer";
        #binding-cells = <1>;
        time-to-live-ms = <750>;
    };

    combos {
        compatible = "zmk,combos";

        closing-square {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <19 20>;
        };

        closing-parenthesis {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <7 8>;
        };

        closing-brace {
            bindings = <&kp RIGHT_BRACE>;
            key-positions = <31 32>;
        };

        openning-square {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <16 15>;
        };

        openning-parenthesis {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <3 4>;
        };

        openning-brace {
            bindings = <&kp LEFT_BRACE>;
            key-positions = <28 27>;
        };

        plus-symbol {
            bindings = <&kp PLUS>;
            key-positions = <20 21>;
        };

        equal-symbol {
            bindings = <&kp EQUAL>;
            key-positions = <32 33>;
        };

        dash-symbol {
            bindings = <&kp MINUS>;
            key-positions = <14 15>;
        };

        underscore-symbol {
            bindings = <&kp UNDERSCORE>;
            key-positions = <26 27>;
        };

        dongle-reset-left {
            bindings = <&bootloader>;
            key-positions = <29 17>;
            layers = <1>;
        };

        dongle-reset-right {
            bindings = <&bootloader>;
            key-positions = <18 30>;
            layers = <2>;
        };
    };

    behaviors {
        lt: layer_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <240>;
            quick-tap-ms = <150>;
            bindings = <&mo>, <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            label = "base";
            bindings = <
&kp TAB    &kp Q  &kp W  &kp E     &kp R  &kp T        &kp Y    &kp U  &kp I      &kp O    &kp P     &kp BSPC
&kp LCTRL  &kp A  &kp S  &kp D     &kp F  &kp G        &kp H    &kp J  &kp K      &kp L    &kp SEMI  &kp APOS
&kp LSHFT  &kp Z  &kp X  &kp C     &kp V  &kp B        &kp N    &kp M  &kp COMMA  &kp DOT  &kp FSLH  &kp RSHIFT
                         &kp LGUI  &mo 1  &kp SPACE    &kp RET  &mo 2
            >;
        };

        raise {
            label = "raise";
            bindings = <
&kp ESC  &kp N1  &kp N2  &kp N3  &kp PG_UP  &trans         &trans    &trans    &trans  &trans     &trans  &kp DEL
&trans   &kp N4  &kp N5  &kp N6  &kp PG_DN  &bootloader    &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT  &trans  &trans
&trans   &kp N7  &kp N8  &kp N9  &kp N0     &sys_reset     &trans    &kp LBKT  &kp F   &kp G      &trans  &trans
                         &trans  &trans     &trans         &trans    &mo 3
            >;
        };

        lower {
            label = "lower";
            bindings = <
&trans  &kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp PRCNT    &kp CARET      &kp AMPS  &kp KP_MULTIPLY  &trans  &trans         &kp DEL
&kp F1  &kp F2    &kp F3  &kp F4    &kp F5    &kp F6       &bootloader    &trans    &trans           &trans  &kp PIPE       &kp GRAVE
&kp F7  &kp F8    &kp F9  &kp F10   &kp F11   &kp F12      &sys_reset     &trans    &trans           &trans  &kp BACKSLASH  &kp TILDE
                          &trans    &mo 3     &trans       &kt RIGHT_ALT  &trans
            >;
        };

        both {
            label = "both";
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans
            >;
        };

        Mouse {
            bindings = <
&trans     &trans  &trans  &trans     &trans  &trans       &trans  &trans  &trans  &trans  &trans  &trans
&trans     &trans  &trans  &trans     &trans  &trans       &trans  &trans  &trans  &trans  &trans  &trans
&mkp MCLK  &trans  &trans  &trans     &trans  &trans       &trans  &trans  &trans  &trans  &trans  &mkp LCLK
                           &mkp LCLK  &trans  &mkp RCLK    &trans  &trans
            >;
        };
    };
};
